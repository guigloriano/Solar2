id.fi <- cumsum(as.numeric(ftable(NDA[,1])))
id.in <- c(1,id.fi+1)
##### 3.1 - Tempo x PDC (Observado e Esperado) #####
for(i in 1:length(id.fi)){
nome_arquivo <- paste ("dia_", (i+(j-1)*20), ".png", sep="")
pathDest <- paste(local_pasta, "graphs\\Tempo x PDC\\", sep = "")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
dia <- i
xi[dia] <- id.in[dia]
xf[dia] <- id.fi[dia]
######  3.1.1 - Cálculo do PDC Observado  ######
Dio <- NDA[xi[dia]:xf[dia],6]
plot(NDA[xi[dia]:xf[dia],2], Dio, pch=19, lwd=2, ylab="Valores Y", xlab="Tempo", xlim=c(0,length(Dio)), ylim=c(2,13))
points(NDA[xi[dia]:xf[dia],2], Dio, col="black", type="l", lwd=2)
#####  3.1.2 - Cálculo do PDC Predito #####
Dip <- pred9[xi[dia]:xf[dia]]
points(NDA[xi[dia]:xf[dia],2], Dip, col="red", type="l", lwd=2)
legend("topleft", legend=c("Observado","Esperado"), col=c("black","red"), lty=1, pch=c(1, NA), lwd=2)
Dip_list[(i+(j-1)*20)] <- sum(Dip)
Dio_list[(i+(j-1)*20)] <- sum(Dio)
EQMi[(i+(j-1)*20)] <- round(mean((Dio - Dip)^2), 6)
textoEQM <- paste("MSE:", EQMi[i+21])
text(68, 11, textoEQM)
dev.off()
}
##### 3.2 - DIP x DIO (21 dias por gráfico) #####
nome_arquivo <- paste ("energia_", (i+(j-1)*20), ".png", sep="")
pathDest <- paste(local_pasta, "graphs\\DIP x DIO\\", sep = "")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
sm <- seq(1,length(id.fi)*j)
p = ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 0.5) +
geom_line(aes(x = sm, y = Dio_list, group=2), color = "red", size = 0.5) +
geom_point(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 1) +
geom_point(aes(x = sm, y = Dio_list, group=2), color = "red", size = 1) +
xlab('Dias') +
ylab('Potência') +
scale_x_continuous(breaks=seq(0, 100, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a"))
print(p)
dev.off()
##### 3.3 - Erro quadrático Médio Diário #####
for(i in 1:(length(id.fi))){
dia <- i
xi <- id.in[dia]
xf <- id.fi[dia]
Dio <- NDA[xi:xf,6]
Dip <- pred9[xi:xf]
eqm[(i+(j-1)*20)] <- mean((Dio - Dip)^2)
}
eqm
EQMi
##### 3.4 - Gráfico do EQM/MSE #####
nome_arquivo <- paste ("eqm1_", (j*21), ".png", sep="")
pathDest <- paste(local_pasta, "graphs\\EQM\\", sep = "")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
sm <- seq(1,length(id.fi)*j)
plot(sm, EQMi, type="l", xlim=c(0,43),  ylim=c(0,max(eqm)), ylab="MSE", xlab="Day")
points(sm, EQMi, pch=19)
dev.off()
sm
EQMi
##### 3.4 - Gráfico do EQM/MSE #####
nome_arquivo <- paste ("eqm1_", (j*21), ".png", sep="")
pathDest <- paste(local_pasta, "graphs\\EQM\\", sep = "")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
sm <- seq(1,length(id.fi)*j)
plot(sm, EQMi, type="l", xlim=c(0,43),  ylim=c(0,max(EQMi)), ylab="MSE", xlab="Day")
points(sm, EQMi, pch=19)
dev.off()
sm
sm
length(id.fi)*j
source("D:/Solar2/Parte2/scripts/002_graficos_EQM_DPM.R")
source("D:/Solar2/Parte2/scripts/002_graficos_EQM_DPM.R")
##### 1.0 - Definição do Caminho "raiz" do script ####
local_pasta <- "D:\\Solar2\\Parte2\\"
graph_extra <- paste(local_pasta, "graphs\\5 - EQM e DPM\\", sep = "")
source("D:/Solar2/Parte2/scripts/002_graficos_EQM_DPM.R")
####  0.1 - Caminho dos Arquivos ####
# >>>> INSIRA A PASTA RAIZ NESTE TRECHO <<<
local_pasta <- "D:\\Solar2\\Parte2\\"
#### 1.0 - Leitura do Primeiro Dataset ####
caminho_dados <- paste(local_pasta, "datasets\\csv\\1_21.csv", sep = "")
dados_treino <- read.csv(caminho_dados)
rm(list=ls(all=TRUE))
source("D:/Solar2/Parte2/scripts/002_graficos_EQM_DPM.R")
local_pasta
source("D:/Solar2/Parte2/scripts/07_graficos_DIOeDIP_mensais.R")
#### exemplo de impressao ####
sm <- seq(1,length(id.fi)+84)
# dev.off()
p = ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 0.5) +
geom_line(aes(x = sm, y = Dio_list, group=2), color = "red", size = 0.5) +
geom_point(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 1) +
geom_point(aes(x = sm, y = Dio_list, group=2), color = "red", size = 1) +
xlab('Dias') +
ylab('Potência') +
scale_x_continuous(breaks=seq(0, 100, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a"))
print(p)
id.fi
Dip_list
### >>> Local para salvar as imagens
pathDest <- paste(local_pasta, "scripts\\graphs\\", sep = "")
#### exemplo de impressao ####
sm <- seq(1,length(Dip_list))
# dev.off()
p = ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 0.5) +
geom_line(aes(x = sm, y = Dio_list, group=2), color = "red", size = 0.5) +
geom_point(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 1) +
geom_point(aes(x = sm, y = Dio_list, group=2), color = "red", size = 1) +
xlab('Dias') +
ylab('Potência') +
scale_x_continuous(breaks=seq(0, 100, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a"))
print(p)
#### DIP, DIO - Outubro ###
nome_arquivo <- paste ("1_Out19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
seq_outDIA <- seq(1,8)
seq_outDip <- Dip_list[1:8]
#### DIP, DIO - Outubro ###
nome_arquivo <- paste ("1_Out19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
#### DIP, DIO - Outubro ###
nome_arquivo <- paste ("1_Out19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
fileDest
### >>> Local para salvar as imagens
pathDest <- paste(local_pasta, "graphs\\", sep = "")
#### exemplo de impressao ####
sm <- seq(1,length(Dip_list))
# dev.off()
p = ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 0.5) +
geom_line(aes(x = sm, y = Dio_list, group=2), color = "red", size = 0.5) +
geom_point(aes(x = sm, y = Dip_list, group=1), color = "blue", size = 1) +
geom_point(aes(x = sm, y = Dio_list, group=2), color = "red", size = 1) +
xlab('Dias') +
ylab('Potência') +
scale_x_continuous(breaks=seq(0, 100, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a"))
print(p)
#### DIP, DIO - Outubro ###
nome_arquivo <- paste ("1_Out19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
seq_outDIA <- seq(1,8)
seq_outDip <- Dip_list[1:8]
graf_out <-barplot(t(as.matrix(seq_outDip)), col=c("gray"),
yaxt = "n", ylab="Energia Predita",xlab="Dia")
axis(2, at = seq(0, 1100, 50), las = 1, cex.axis=0.5)
axis(1, at=graf_out,labels=1:8, cex.axis=0.5)
dev.off()
nome_arquivo <- paste ("1_Out19_energia_all.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
conjOut <- data.frame("DIA" = seq(1,8), "DIP" = Dip_list[1:8], "DIO" = Dio_list[1:8])
conjOut2 <- melt(data = conjOut, id.vars = "DIA", measure.vars = c("DIP", "DIO"))
gf_out <- ggplot(data = conjOut2 , aes(x=DIA, y = value, fill = variable) ) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks = 50*0:900, name = "Energia") +
scale_x_continuous(breaks = 1*1:8) +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=13),) +
ggtitle("Dias - Outubro/19") +
theme(axis.text.x = element_text(angle = 60))
plot(gf_out)
dev.off()
#### DIP, DIO - Novembro ####
nome_arquivo <- paste ("2_Nov19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
seq_novDIA <- seq(9,33)
seq_novDip <- Dip_list[9:33]
graf_nov <-barplot(t(as.matrix(seq_novDip)), col=c("gray"),
yaxt = "n", ylab="Energia Predita",xlab="Dia")
axis(2, at = seq(0, 1100, 50), las = 1, cex.axis=0.5)
axis(1, at=graf_nov,labels=9:33, cex.axis=0.5)
dev.off()
nome_arquivo <- paste ("2_Nov19_energia_all.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
conjNov <- data.frame("DIA" = seq(9,33), "DIP" = Dip_list[9:33], "DIO" = Dio_list[9:33])
conjNov2 <- melt(data = conjNov, id.vars = "DIA", measure.vars = c("DIP", "DIO"))
gf_nov <- ggplot(data = conjNov2 , aes(x=DIA, y = value, fill = variable) ) +
geom_bar(stat="identity", position="dodge") +
scale_y_continuous(breaks = 50*0:900, name = "Energia") +
scale_x_continuous(breaks = 1*9:33) +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=13),) +
ggtitle("Dias - Novembro/19") +
theme(axis.text.x = element_text(angle = 60))
plot(gf_nov)
dev.off()
#### DIP, DIO - Dezembro ###
nome_arquivo <- paste ("3_Dez19_energia_dip.png")
fileDest <- paste(pathDest, nome_arquivo, sep = "")
png(filename = fileDest, width = 720, height = 480, units = 'px')
seq_dezDIA <- seq(34,39)
seq_dezDip <- Dip_list[34:39]
graf_dez <-barplot(t(as.matrix(seq_dezDip)), col=c("gray"),
yaxt = "n", ylab="Energia Predita",xlab="Dia")
source("D:/Solar2/Parte2/scripts/07_graficos_DIOeDIP_mensais.R")
source("D:/Solar2/Parte2/scripts/005_graficos50_EQM_DPM.R")
##### 2.3 - Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc50_Abs_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM2 <- data.frame("dia" = seq(1,100), "DPM" = abs(Dim))
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(Dim)), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
dev.off()
dev.off()
dev.off()
new_bar_DPM2 <- data.frame("dia" = seq(1,100), "DPM" = abs(Dim))
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(Dim)), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
max(Dim)
Dim
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max( ( abs(Dim) ) ) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
dev.off()
print(DPM_corrigido1)
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max( ( abs(Dim) ) ) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
new_bar_DPM2
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max( new_bar_DPM2 ) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max( new_bar_DPM2$Dim ) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
ew_bar_DPM2$Dim
new_bar_DPM2$Dim
r
new_bar_DPM2 <- data.frame("dia" = seq(1,100), "DPM" = abs(Dim))
new_bar_DPM2
Dim
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max( new_bar_DPM2$DPM ) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
new_bar_DPM2$DPM
max( new_bar_DPM2$DPM )
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, 13 ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(1, 13 ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
DPM_corrigido <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(-1, 13 ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
print(DPM_corrigido1)
DPM_corrigido <- ggplot(data = new_bar_DPM2 , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(-1, 13 ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
DPM_corrigido <- ggplot(data = new_bar_DPM2 , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(new_bar_DPM2$DPM) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
##### 2.3 - Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc50_Abs_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM2 <- data.frame("dia" = seq(1,100), "DPM" = abs(Dim))
DPM_corrigido <- ggplot(data = new_bar_DPM2 , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(new_bar_DPM2$DPM) ), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_corrigido)
dev.off()
source("D:/Solar2/Parte2/scripts/004b_nlme_teste50.R")
##### 1.0 - Leitura dos dados #####
dados1 <- read.csv("D:\\Solar2\\Parte2\\datasets\\csv\\1_21.csv")
source("D:/Solar2/Parte2/scripts/004b_nlme_teste50.R")
EQMi
mean(EQMi)
round(mean(EQMi), 5)
summary(M9)
Dim
max(Dim)
min(Dim)
EQMi
EQMi[1:50]
round(meanEQMi[1:50], 4)
round(mean(EQMi[1:50]), 4)
round(mean(EQMi[51:100]), 4)
round(mean(EQMi[1:50]), 6)
round(mean(EQMi[51:100]), 6)
round(mean(EQMi[1:50]), 8)
dadosTotal
summary(dadosTotal)
summary(dadosTotal[,1:50])
dadosTotal[,1:50
dadosTotal[,1:50]
summary(dadosTotal[1:50,])
summary(dados1)
View(dados1)
summary(dados2)
View(dados2)
View(dadosTotal)
dadosTotal[1:50,]
dadosTotal[DIA[1:50],]
summary(dadosTotal$DIA < 51)
View(dadosTeste)
View(dadosTreino)
dadosTreino
summary(dadosTreino)
summary(dadosTreino)
sd(dadosTreinos[,3])
sd(dadosTreino[,3])
dadosTreino[,3]
sd(dadosTreino[,3])
sd(dadosTreino[,4])
sd(dadosTreino[,5])
sd(dadosTreino[,6])
round(sd(dadosTreino[,3]), 5)
round(sd(dadosTreino[,3]), 5)
round(sd(dadosTreino[,4]), 5)
round(sd(dadosTreino[,5]), 5)
round(sd(dadosTreino[,6]), 5)
summary(dadosTreino)
dadosTreino[, 3:5]
cor(dadosTreino[, 3:5])
round(cor(dadosTreino[, 3:5]), 4)
source("D:/Solar2/Parte2/scripts/000_TodosModelos_50Dias[CSV].R")
TableMetrics2
round(TableMetrics2,3)
round(TableMetrics2[1:3], 3)
TableMetrics2
TableMetrics2
TableMetrics2
summary(M9)
par(mai=c(1,1,0.3,0.3))
res <- as.numeric(residuals(M9a))
plot(pred9a, res, ylim=c(-1.5,1.5), ylab="Residuals",xlab="Predicted values")
plot(DA2[,6], pred9a, ylab="Predicted values", xlab="Registered values")
par(mai=c(1,1,0.3,0.3))
res <- as.numeric(residuals(M9a))
plot(pred9a, res, ylim=c(-1.5,1.5), ylab="Residuals",xlab="Predicted values")
plot(DA2[,6], pred9a, ylab="Predicted values", xlab="Registered values")
id.fi <- cumsum(as.numeric(ftable(D2[,1])))
plot(pred9a, res, ylim=c(-1.5,1.5), ylab="Residuals",xlab="Predicted values")
plot(DA2[,6], pred9a, ylab="Predicted values", xlab="Registered values")
plot(pred9a, res, ylim=c(-1.5,1.5), ylab="Residuals",xlab="Predicted values")
plot(DA2[,6], pred9a, ylab="Predicted values", xlab="Registered values")
id.fi <- cumsum(as.numeric(ftable(D2[,1])))
id.in <- c(1,id.fi+1)
dia <- 1
xi <- id.in[dia]
xf <- id.fi[dia]
Di <- cumsum(D2[xi:xf,6])
plot(D2[xi:xf,2], Di, pch=19, lwd=2, ylab="X", xlab="Tempo", xlim=c(0,length(Di)))
points(D2[xi:xf,2], Di, col="black", type="l", lwd=2)
xi <- id.in[dia]
xf <- id.fi[dia]
Do <- DA2[xi:xf,6]
De <- as.numeric(pred9a[xi:xf])
nd <- length(Do)
plot(D2[xi:xf,2], Do, col="grey70", pch=19, lwd=2, ylab="Y's values", xlab="Time", xlim=c(0, 77), ylim=c(3,13))
points(D2[xi:xf,2], De, col="black", type="l", lwd=2)
plot(D2[xi:xf,2], exp(Do), pch=19, col="grey70", lwd=2, ylab="X", xlab="Tempo", xlim=c(0,length(Do)))
points(D2[xi:xf,2], exp(De), col="black", type="l", lwd=2)
perc <- round(((exp(Do[nd]) - exp(De[nd]))/exp(De[nd]))*100, 4)
perc
dia <- 2
xi <- id.in[dia]
xf <- id.fi[dia]
plot(D2[xi:xf,2], Do, col="grey70", pch=19, lwd=2, ylab="Y's values", xlab="Time", xlim=c(0, 77), ylim=c(3,13))
dia <- 2
##### tempo x PCD - Acumulados
xi <- id.in[dia]
xf <- id.fi[dia]
Di <- cumsum(D2[xi:xf,6])
plot(D2[xi:xf,2], Di, pch=19, lwd=2, ylab="X", xlab="Tempo", xlim=c(0,length(Di)))
points(D2[xi:xf,2], Di, col="black", type="l", lwd=2)
##### tempo x PCD - Acumulados
xi <- id.in[dia]
xf <- id.fi[dia]
Do <- DA2[xi:xf,6]
De <- as.numeric(pred9a[xi:xf])
nd <- length(Do)
## Log-scale
plot(D2[xi:xf,2], Do, col="grey70", pch=19, lwd=2, ylab="Y's values", xlab="Time", xlim=c(0, 77), ylim=c(3,13))
points(D2[xi:xf,2], De, col="black", type="l", lwd=2)
