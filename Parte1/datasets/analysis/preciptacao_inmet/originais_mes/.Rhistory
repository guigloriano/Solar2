ambientais.cg.20191023 <- read.csv("~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv", header=FALSE)
View(ambientais.cg.20191023)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=FALSE)
View(dadosEst$V1)
View(dadosEst$V2)
teste <- mean(dadosEst$V2)
View(dadosEst$V2)
teste <- mean(dadosEst$V4)
View(dadosEst$V2)
dadosEst
View(ambientais.cg.20191023)
View(ambientais.cg.20191023)
View(dadosEst$Horario)
View(dadosEst$PM1 massa (mg/m^3))
teste <- mean(dadosEst$c1!=0, 1)
View(teste)
library(dplyr)
library(magrittr)
teste <- mean(dadosEst$V4)
dadosEst <- read.csv(caminho_CSV, header=FALSE)
teste <- mean(dadosEst$V4)
PM1massa <- dadosEst$V4
View(PM1massa)
PM1massa <- as.numeric(levels(PM1massa))
teste <- mean(dadosEst$V4, na.rm = FALSE)
PM1massa <- as.numeric(levels(PM1massa))
teste <- mean(PM1massa, na.rm = FALSE)
View(teste)
View(dadosEst)
PM1massa <- dadosEst$V4
teste <- c(12,7,3,4.2,18,2,54,-21,8,-5,NA)
teste <- c(12,7,3,4.2,18,2,54.4,-21,8,-5,NA)
View(PM1massa)
PM1massa <- dadosEst$V4
PM1massa <- as.numeric(levels(PM1massa))
PM1massa <- dadosEst$V4
PM1massa2 <- as.numeric(levels(PM1massa))
View(PM1massa2)
PM1massa2 <- as.numeric(PM1massa)
PM1massa3 <- as.numeric(PM1massa)
View(PM1massa3)
View(ambientais.cg.20191023)
View(ambientais.cg.20191023)
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=FALSE)
View(dadosEst)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
View(PM1massa001)
dadosEst <- read.csv(caminho_CSV, header=TRUE)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
View(PM1massa001)
View(dadosEst)
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$V4
PM1massa001 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$pm1_massa
PM1massaMedia <- mean(PM1massa001)
class(dadosEst)
str(dadosEst)
require(stringr)
library(lubridate)
require(dplyr)
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "~/Projeto/monitoramento-ufms"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
source("~/Projeto/Tabelas_DynamoDB/RProject/a_f1.R")
# Leitura dos dados do inversor
dirs <- list.dirs(pathrepo, full.names = TRUE, recursive = TRUE)
data.inversor <- do.call("rbind", lapply(dirs, f1))
data.inversor$V7 <- NULL
View(dirs)
data.inversor <- do.call("rbind", lapply(dirs, f1))
t <- strptime(data.inversor$V1, "%d.%m.%Y %H:%M")
data.inversor$V1 <- as.numeric(strftime(t, "%Y%m%d%H%M%S"))
names(data.inversor) <- columns.inversor
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
View(dadosEst)
PM1massa <- dadosEst$V4
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa <- dadosEst$V4
PM1massaMedia <- mean(PM1massa)
PM1massa <- dadosEst$pm1_massa
PM1massaMedia <- mean(PM1massa)
library(dplyr)
library(magrittr)
Group = group_by(dadosEst, horario)
View(Group)
View(dadosEst)
t <- strptime(dadosEst$horario, "%d.%m.%Y %H:%M")
t <- strptime(dadosEst$horario, "%H:%M")
data.inversor$V1 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
t2 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
View(t)
t <- strptime(dadosEst$horario, "%H:%M")
t2 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
t2 <- as.numeric(strftime(t, "H%M%S"))
library(dplyr)
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
x <- readr::read_csv("~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv", col_types = cols(horario = col_character()))
install(readr)
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
g <- dplyr::group_by(x, data, h = substr(horario, 1, 2),
m = floor(as.numeric(substr(horario, 4, 5))/15))
gg <- dplyr::summarise(g, hora = dplyr::first(horario),
irradiacao = mean(irradiacao),
pm1_massa = mean(pm1_massa),
pm2_massa = mean(pm2_massa),
pm4_massa = mean(pm4_massa),
pm10_massa = mean(pm10_massa),
pm1_concentracao = mean(pm1_concentracao),
pm2_concentracao = mean(pm2_concentracao),
pm4_concentracao = mean(pm4_concentracao),
pm10_concentracao = mean(pm10_concentracao),
concentracao_media = mean(concentracao_media),
temperatura = mean(temperatura),
vento_vel=mean(vento_vel), n = dplyr::n())
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
g <- dplyr::group_by(x, data, h = substr(horario, 1, 2),
m = floor(as.numeric(substr(horario, 4, 5))/15))
gg <- dplyr::summarise(g, hora = dplyr::first(horario),
irradiacao = mean(irradiacao),
pm1_massa = mean(pm1_massa),
pm2_massa = mean(pm2_massa),
pm4_massa = mean(pm4_massa),
pm10_massa = mean(pm10_massa),
pm1_concentracao = mean(pm1_concentracao),
pm2_concentracao = mean(pm2_concentracao),
pm4_concentracao = mean(pm4_concentracao),
pm10_concentracao = mean(pm10_concentracao),
concentracao_media = mean(concentracao_media),
temperatura = mean(temperatura),
vento_vel=mean(vento_vel), n = dplyr::n())
y <- gg
y$h <- NULL
y$m <- NULL
write_csv(y,'Downloads/Telegram Desktop/mestrado-glo.csv')
write_csv(y,'Downloads/mestrado-glo.csv')
write_csv(y,'Downloads/mestrado-glo.csv')
write.table(y,'Downloads/mestrado-glo.csv')
write.table(y,"~/Projeto/Tabelas_DynamoDB/", sep = ",")
write.table(y, "C:/Users/Guilherme/Documents/Projeto/Tabelas_DynamoDB/", sep = ",")
write_csv(y,'~/Projeto/Tabelas_DynamoDB/mestrado-glo.csv')
write_csv(y,'~/Projeto/Tabelas_DynamoDB/Medias_AmbientaisCG_20191025.csv')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
library(dplyr)
library(magrittr)
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais_ufms_03_a_19_Out_2.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
---
title: "intrucoes_codigos_R"
author: "Guilherme Gloriano"
date: "07/11/2019"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
library(readxl)
ambientais_ufms_20191008 <- read_excel("D:/github/Tabelas_DynamoDB/csv/ambientais_diario_min/ambientais-ufms-20191008.csv")
View(ambientais_ufms_20191008)
library(readr)
ambientais_ufms_20191008 <- read_csv("D:/github/Tabelas_DynamoDB/csv/ambientais_diario_min/ambientais-ufms-20191008.csv")
View(ambientais_ufms_20191008)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
library(dplyr)
library(magrittr)
library(readr)
library(tidyverse)
library(ggplot2)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
library(readr)
ambientais_diario_15min <- read_csv("D:\\github\\Tabelas_DynamoDB\\csv\\Zz_antigos\\ambientais_diario_15min")
View(ambientais_diario_15min)
`15min_ambientais.ufms.20191008` <- read.csv("D:/github/Tabelas_DynamoDB/csv/Zz_antigos/ambientais_diario_15min/15min_ambientais-ufms-20191008.csv", header=FALSE)
View(`15min_ambientais.ufms.20191008`)
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(`15min_ambientais.ufms.20191008`)
dataset <- `15min_ambientais.ufms.20191008`
graf <- ggplot(data = dataset, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=temp, color="Temperatura", group=1)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Temperatura °C") +
ggtitle("Temperatura 08/10/19")
pathDest <- "C:\\Users\\Guilherme\\Desktop\\testeTEMP\\"
fileDest <- paste(pathDest,  "graf_temperatura2", ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
by_vs_am <- x_INMET % > %
group_by(data) % > %
summarise(teste = sum(precipitacao))
gg <- dplyr::summarise(g, prec = sum(precipitacao, na.rm=TRUE)
y <- gg
y$h <- NULL
y$m <- NULL
y$n <- NULL
#  fileDest <- paste(cam_Merge,  "/reduzidas/tabelas_reduzidas_", dia, ".csv", sep = "")
#  write_csv(z1_merge, fileDest)
}
gg <- dplyr::summarise(g, prec = sum(precipitacao, na.rm=TRUE))
g <- dplyr::group_by(x_INMET, data)
library(dplyr)
library(readr)
library(stringr)
library(pracma)
library(compareDF)
tab_INMET <- "D:\\github\\Tabelas_DynamoDB\\csv_para_analise\\tabelas_teste\\preciptacao_inmet\\"
# bloco para leitura dos arquivos .csvs das tabelas combinadas de estação e inversor
cam_INMET   <- setwd(tab_INMET)
cam_INMET   <- setwd(tab_INMET)
lista_INMET <- list.files(pattern = "*.csv")
arq_INMET   <- paste(cam_INMET,  "/", lista_INMET, sep = "")
i = 1
#  i = 1
df_INMET <- arq_INMET[i]
x_INMET <- readr::read_csv(df_INMET, col_types = cols(data = col_character()))
g <- dplyr::group_by(x_INMET, data)
gg <- dplyr::summarise(g, prec = sum(precipitacao, na.rm=TRUE))
View(gg)
lista_dias <- data.frame(NULL)
source('~/.active-rstudio-document', encoding = 'UTF-8')
lista_dias
View(lista_dias)
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
source('D:/github/Tabelas_DynamoDB/csv_para_analise/tabelas_teste/preciptacao_inmet/verifica_dias_chuva.R')
