new_bar_DPM
source("D:/Solar2/Parte2/scripts/002_graficos21_EQM_DPM.R")
source("D:/Solar2/Parte2/scripts/002_graficos21_EQM_DPM.R")
source("D:/Solar2/Parte2/scripts/002_graficos21_EQM_DPM.R")
##### 1.0 - Inicialização de Variáveis ####
ver_eqm <- numeric()
ver_eqm <- data.frame((EQMi))
mean(EQMi)
##### 2.0 - Gráficos: Dif. Perc. Corrigida e EQM (com erro) ####
###### 2.1 - Grafico do EQM com a Tendencia do erro #######
eqm_png <- paste ("EQMerror", ".png", sep="")
dest_eqm <- paste(graph_extra, eqm_png, sep = "")
png(filename = dest_eqm, width = 720, height = 480, units = 'px')
data_eqm <- data.frame(cbind(sm, EQMi))
gp_eqm <- ggplot(data = data_eqm, aes(x = sm)) + theme_bw() +
geom_line(aes(y= EQMi, group = 1, color = "Prediction Error"),
size = 0.6, lty = "81") +
geom_point(aes(y = EQMi, color = "Prediction Error"), size= 1.0) +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01)) +
geom_smooth(aes(y = EQMi, color = "Local Regression Fitting",
method="loess", se = F))+#, linetype = "dashed") +
xlab('Days') +   ylab('MSE - Mean Square Error') +
theme(text = element_text(size=16),
axis.text.x = element_text(angle=45, hjust=1),
legend.justification=c(1,0), legend.position=c(1,0),
legend.background = element_rect(fill = "lightgray") ) +
scale_colour_manual(name=NULL,
values=c("Prediction Error" = "blue",
"Local Regression Fitting" ="red"))
gp_eqm
print(gp_eqm)
dev.off()
###### 2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc2_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim),max(Dim)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.3 - Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc2_Abs_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = abs(Dim))
DPM_Abs <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(Dim)), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_Abs)
dev.off()
###### 2.3 - Grafico: DCPower (Dip x Dio Complet)  ####
dpm_png <- paste ("DCPower.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
sm <- seq(1,length(Dip_list))
# dev.off()
dc_power <- ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1, color = "Predicted"), size = 0.7) +
geom_point(aes(x = sm, y = Dip_list, color = "Predicted"), size = 1.5) +
geom_line(aes(x = sm, y = Dio_list, group=2, color = "Observed"), size = 0.7) +
geom_point(aes(x = sm, y = Dio_list, color = "Observed"), size = 1.5) +
xlab('Days') + ylab('DC Power') +
scale_x_continuous(breaks=seq(0, 106, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a")) +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1),
legend.justification=c(1,1), legend.position=c(.99,.99),
legend.background = element_rect(fill = "lightgray", size=0.5,
linetype="solid", colour ="black")) +
scale_color_manual(name=NULL,
values=c('Predicted' = 'blue', 'Observed' ='red'))
print(dc_power)
plot(dc_power)
dev.off()
dev.off()
Dip_list
Dio_list
new_bar_DPM
##### 1.0 - Inicialização de Variáveis ####
ver_eqm <- numeric()
ver_eqm <- data.frame((EQMi))
mean(EQMi)
##### 2.0 - Gráficos: Dif. Perc. Corrigida e EQM (com erro) ####
###### 2.1 - Grafico do EQM com a Tendencia do erro #######
eqm_png <- paste ("EQMerror", ".png", sep="")
dest_eqm <- paste(graph_extra, eqm_png, sep = "")
png(filename = dest_eqm, width = 720, height = 480, units = 'px')
data_eqm <- data.frame(cbind(sm, EQMi))
gp_eqm <- ggplot(data = data_eqm, aes(x = sm)) + theme_bw() +
geom_line(aes(y= EQMi, group = 1, color = "Prediction Error"),
size = 0.6, lty = "81") +
geom_point(aes(y = EQMi, color = "Prediction Error"), size= 1.0) +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01)) +
geom_smooth(aes(y = EQMi, color = "Local Regression Fitting",
method="loess", se = F))+#, linetype = "dashed") +
xlab('Days') +   ylab('MSE - Mean Square Error') +
theme(text = element_text(size=16),
axis.text.x = element_text(angle=45, hjust=1),
legend.justification=c(1,0), legend.position=c(1,0),
legend.background = element_rect(fill = "lightgray") ) +
scale_colour_manual(name=NULL,
values=c("Prediction Error" = "blue",
"Local Regression Fitting" ="red"))
gp_eqm
print(gp_eqm)
dev.off()
###### 2.2.1. - Grafico da Dif. Per. Media Original  (DIM = Exp(DIO/DIP) ####
dpm_png <- paste ("DifPercEXP_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim),max(Dim)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim),max(Dim)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.3 - Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc2_Abs_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = abs(Dim))
DPM_Abs <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(0, max(Dim)), name = "Percentagem (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Dias") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
plot(DPM_Abs)
dev.off()
###### 2.3 - Grafico: DCPower (Dip x Dio Complet)  ####
dpm_png <- paste ("DCPower.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
sm <- seq(1,length(Dip_list))
# dev.off()
dc_power <- ggplot() + theme_bw() +
geom_line(aes(x = sm, y = Dip_list, group=1, color = "Predicted"), size = 0.7) +
geom_point(aes(x = sm, y = Dip_list, color = "Predicted"), size = 1.5) +
geom_line(aes(x = sm, y = Dio_list, group=2, color = "Observed"), size = 0.7) +
geom_point(aes(x = sm, y = Dio_list, color = "Observed"), size = 1.5) +
xlab('Days') + ylab('DC Power') +
scale_x_continuous(breaks=seq(0, 106, 5))  +
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a")) +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust=1),
legend.justification=c(1,1), legend.position=c(.99,.99),
legend.background = element_rect(fill = "lightgray", size=0.5,
linetype="solid", colour ="black")) +
scale_color_manual(name=NULL,
values=c('Predicted' = 'blue', 'Observed' ='red'))
print(dc_power)
plot(dc_power)
dev.off()
dev.off()
Dip_list
Dio_list
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim2),max(Dim2)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:106, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim2),max(Dim2)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:107, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim2),max(Dim2)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:109, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim2),max(Dim2)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:110, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
###### 2.2.2- Grafico da Dif. Per. Media Original  ####
dpm_png <- paste ("DifPerc_original_105.png", sep="")
dest_dpm <- paste(graph_extra, dpm_png, sep = "")
png(filename = dest_dpm, width = 720, height = 480, units = 'px')
new_bar_DPM <- data.frame("dia" = seq(1,105), "DPM" = Dim2)
DPM_Original <- ggplot(data = new_bar_DPM , aes(x=dia, y = DPM, color="gray")) +
theme_bw() + geom_bar(stat="identity", position="dodge", color="black",) +
#  scale_y_continuous(breaks = seq(from = min(Dim), to = max(Dim), by = 1), name = "Percentagem (%)") +
scale_y_continuous(limits = c(min(Dim2),max(Dim2)), name = "Percentage (%)") +
scale_x_continuous(breaks = 5*0:111, expand = c(0.01,0.01), name = "Days") +
#  geom_smooth(aes(y = DPM, color = "Local Regression Fitting", method="loess", se = F))+
#, linetype = "dashed") +
theme(axis.title.y = element_text(hjust = 0.5, color = 'black', size=20),) +
# ggtitle("Diferença Percentual Média Diária") +  theme_bw() +
#  ggtitle("Percent Difference Average Daily") ++
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45))
print(DPM_Original)
plot(DPM_Original)
dev.off()
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
summary(M9)
sigma(M9)
summary(M9)$adj.r.squared
summary(M9)
#define function to calculate adjusted R-squared
adj_r2 <- function(M9) {
return (1 - ((1-M9$adj.r.squared)*(nobs(M9)-1)/(nobs(M9)-length(M9$coefficients)-1)))
}
adj_r2
#define function to calculate adjusted R-squared
adj_r2 <- function(x) {
return (1 - ((1-x$adj.r.squared)*(nobs(x)-1)/(nobs(x)-length(x$coefficients)-1)))
}
adj_r2(M9)
summary(pred9)
summary(pred9)$adj.r.squared
summary(M9)
summary(pred9)
r2(M9, n = NULL)
r2(M9)
library(sjmisc)
library(lme4)
summary(M9)
require(MASS)
summary(M9)
rsq(M9)
rsq(M9,adj=FALSE,type=c('v','kl','sse','lr','n'))
require(nlme)
rsq(M9)
library(nlme)
rsq(M9,adj=FALSE,type=c('v','kl','sse','lr','n'))
library(nlme)
library(methods)
library(stats)
library(MASS)
library(lme4)
DA
pred9
R.square = cor(DA$PDC, pred9) ^ 2
R.square
R2 = cor(DA$PDC, pred9) ^ 2
summary(M9)
AdjustedR2 = 1 - ( (1-R2)*(1625-1)/(1625-6-1) )
AdjustedR2
R2
AdjustedR2 = 1 - ( (1-R2)*(1625-1)/(1625-5-1) )
AdjustedR2
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
NDA
PDC_list <- numeric()
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
PDC_list
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
PDC_list
pred9_list
# https://stackoverflow.com/questions/40901445/function-to-calculate-r2-r-squared-in-r
R2 = cor(PDC_list, pred9_list) ^ 2
R2
PDC_list
View(PDC_list)
NDA$PDC
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
PDC_list
pred9_list
# https://stackoverflow.com/questions/40901445/function-to-calculate-r2-r-squared-in-r
R2 = cor(PDC_list, pred9_list) ^ 2
R2
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
# https://stackoverflow.com/questions/40901445/function-to-calculate-r2-r-squared-in-r
R2_teste = cor(DA$PDC, pred9) ^ 2
# https://www.statology.org/adjusted-r-squared-in-r/
AdjustedR2_teste = 1 - ( (1-R2_teste)*(1625-1)/(1625-2-1) )
# https://stackoverflow.com/questions/40901445/function-to-calculate-r2-r-squared-in-r
R2_teste = cor(DA$PDC, pred9) ^ 2
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
MSE_treino
MSE_teste
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
MSE_teste
MSE_treino
rsq_test
rsq_treino
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
source("D:/Solar2/Parte2/scripts/001a_nlme_treino21.R")
##### 0.1 - Definição do Caminho "raiz" do script ####
local_pasta <- "D:\\Solar2\\Parte2\\"
cod_treino <- paste(local_pasta, "scripts\\001a_nlme_treino21.R", sep = "")
source(cod_treino)
#### 1.0 - Leitura dos Caminhos dos Datasets ####
caminho_dia01a21 <- paste("D:\\Solar2\\Parte2\\datasets\\csv\\1_21.csv")
caminho_dia22a42 <- paste("D:\\Solar2\\Parte2\\datasets\\csv\\22_42.csv")
caminho_dia43a63 <- paste("D:\\Solar2\\Parte2\\datasets\\csv\\43_63.csv")
caminho_dia64a84 <- paste("D:\\Solar2\\Parte2\\datasets\\csv\\64_84.csv")
caminho_dia85a105 <- paste("D:\\Solar2\\Parte2\\datasets\\csv\\85_105.csv")
##### 1.1 - Criação da Lista de Caminhos #####
TodosCaminhos <- c(caminho_dia01a21, caminho_dia22a42, caminho_dia43a63,
caminho_dia64a84, caminho_dia85a105)
TodosCaminhos
for(j in 1:length(TodosCaminhos)){
# Mostrar Qual é o Caminho Atual do Arquivo a Ser Lido
out1 <- paste0("Arquivo Lido: ", TodosCaminhos[j])
print(out1)
# Indicar os índices dos Dias do dataset
out2 <- paste0("Dias: ", (j+(j-1)*20), " ao dia ", (j*21) )
print(out2)
}
j
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
PDC_list_treino
j
j == 1
PDC_list_teste
PDC_list_treino
pred9_list_treino
pred9_list_test
pred9_list_test
PDC_list_teste
pred9
j == 1
j > 1
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
PDC_list_treino
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
r_teste
r_treino
PDC_full <- append(PDC_list_treino, PDC_list_teste)
PDC_full
pred9_full <- append(pred9_list_treino, pred9_list_teste)
MSE_full = (sum(PDC_full - pred9_full)^2)/length(pred9_full)
MSE_full
MSE_teste
A_full = PDC_full - mean(PDC_full)
B_full = pred9_full - mean(pred9_full)
numerador_full = sum(A_full * B_full)
C_full = sum (A_full^2)
D_full = sum (B_full^2)
denominador_full = sqrt( C_full * D_full )
r_full = numerador_full/denominador_full
r_full
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
plot(NDA[xi[dia]:xf[dia],2], Dio, pch=19, lwd=2, ylab="Valores Y", xlab="Tempo", xlim=c(0,length(Dio)), ylim=c(2,13))
points(NDA[xi[dia]:xf[dia],2], Dio, col="black", type="l", lwd=2)
EQMi
EQMi
Dio
Dip
Dip
dia
dia
xi[dia]
xf[dia]
pred9
pred9[xi[dia]:xf[dia]]
pred9
xi[dia]
pred9[1423]
pred9[1422]
pred9[1422]
dia
xi[dia]
xi
xf
NDA
newd
M9
View(newd)
lista_massas
lista_massas[3]
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
View(ND)
View(lista_massas)
View(newd)
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
###### 5.3.2 - MSE Global ######
mean(EQMi)
###### 5.2.2 - EQM/MSE Teste ######
mean(EQMi[22:105])
lista_massas
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
lista_massas
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
###### 5.3.2 - MSE Global ######
mean(EQMi)
mean
###### 5.1.2 - EQM/MSE Treino ######
mean(EQMi[1:21])
###### 5.2.2 - EQM/MSE Teste ######
mean(EQMi[22:105])
###### 5.3.2 - MSE Global ######
mean(EQMi)
max(df_21Aux$PRECIP)
max(df_42Aux$PRECIP)
max(df_63Aux$PRECIP)
max(df_84Aux$PRECIP)
max(df_105Aux$PRECIP)
source("D:/Solar2/Parte1/TreinoVsTeste (com precipitação).R")
max(df_21Aux$PRECIP)
max(df_42Aux$PRECIP)
max(df_63Aux$PRECIP)
max(df_84Aux$PRECIP)
max(df_105Aux$PRECIP)
source("D:/Solar2/Parte2/scripts/001b_nlme_teste21b.R")
###### 5.3.2 - MSE Global ######
mean(EQMi)
